version: 2

templates:
  golang-template: &golang-template
    docker:
      - image: uroottest/test-image-amd64:v5.2.0
    working_directory: /home/circleci/go/src/github.com/hugelgupf/p9
    environment:
      - CGO_ENABLED: 0
      # Double all timeouts for QEMU VM tests since they run without KVM.
      - UROOT_QEMU_TIMEOUT_X: 2
      - VMTEST_KERNEL: /home/circleci/bzImage
      - VMTEST_QEMU: "/home/circleci/qemu-system-x86_64 -L /home/circleci/pc-bios -m 1G"

workflows:
  version: 2
  build:
    jobs:
      - build
      - test

jobs:
  test:
    <<: *golang-template
    steps:
      - checkout
      - run: go env
      - run: go test -timeout 15m -v ./...
      - run: CGO_ENABLED=1 go test -race -timeout 15m -v ./...

  build:
    <<: *golang-template
    steps:
      - checkout
      - run: go env
      - run: |
          go install github.com/mitchellh/gox@latest

          # Exclude darwin/arm(64?).
          gox -osarch="darwin/amd64" ./...
          gox -parallel=2 -os="windows linux freebsd netbsd openbsd solaris" -arch="386 amd64 arm arm64 ppc64 ppc64le s390x mips mipsle mips64 mips64le" ./...
